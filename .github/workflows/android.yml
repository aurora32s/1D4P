name: Android CI

on:
  push:
    branches: [ "dev", "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: check out repository
      uses: actions/checkout@v3
    
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
        
    - name: Cache Gradle Packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{runner.os}}-gradle-${{hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**.*.kt')}}
        restore-keys: ${{runner.os}}-gradle-
      
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Access Google-Service file
      run: echo '${{ secrets.GOOGLE_SERVICE }}' > ./app/google-services.json
      
#     - name: Run klint
#       run: ./gradlew klintCheck
      
    - name: Run unit tests
      run: ./gradlew testDebugUnitTest
      
    - name: Build with Gradle
      run: ./gradlew assembleDebug
      if: "contains(github.ref, 'dev')"
      
    - name: Build with Gradle
      run: ./gradlew assembleRelease
      if: "contains(github.ref, 'main')"
      
    - name: Sign APK
      id: sign_apk
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/release
        signingKeyBase64: ${{ secrets.SIGNINGKEYBASE64 }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEYSTOREPASSWORD }}
        keyPassword: ${{ secrets.KEYPASSWORD }}
      
    - name: Upload apk-files Directory
      uses: actions/upload-artifact@v3
      with:
        name: app-release-signed
        path: ${{ steps.sign_apk.outputs.signedReleaseFile }}
      if: "contains(github.ref, 'main')"
      
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: "contains(github.ref, 'main')"
    
    steps:
    - name: Check out Git Repository
      uses: actions/checkout@v2
      
    - name: Download apk-files Artifactory
      uses: actions/download-artifact@v3
      with:
        name: app-release-signed
        path: ${{ github.workspace }}/app/release/
        
    - name: upload artifact to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{secrets.FIREBASE_APP_ID}}
        serviceCredentialsFileContent: ${{secrets.CREDENTIAL_FILE_CONTENT}}
        groups: base
        file: app-release-signed.apk
